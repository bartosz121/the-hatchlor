# This workflows will create a new demo repository using The Hatchlor for demonstration purposes

name: Run tests

on:
  push:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cookiecutter_cfg: ['default.yml', 'lock-file.yml', 'proprietary.yml']
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        path: ./hatchlor-template

    - name: Setup uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
        python-version: "3.10"
        activate-environment: "true"

    - name: Install dependencies
      run: |
        uv pip install pip cookiecutter hatch>=1.15.0 pre-commit

    - name: Setup git
      run: |
        git config --global user.email "github.action@example.com"
        git config --global user.name "Github Action"

    - name: Run cookiecutter
      run: cookiecutter --no-input ./hatchlor-template --config-file ./hatchlor-template/configs/${{ matrix.cookiecutter_cfg }}

    - name: Test some general hatch commands
      working-directory: ./hatchlor-demo
      run: |
        hatch env create
        hatch run cov
        hatch run lint
        hatch run typecheck
        hatch run pre-commit run --all-files

    - name: Build the package
      working-directory: ./hatchlor-demo
      run: hatch build

    - name: Test lock-file related commands
      if: matrix.cookiecutter_cfg == 'lock-file.yml'
      working-directory: ./hatchlor-demo
      run: |
          hatch run upgrade-all
          hatch run upgrade-all
          hatch run upgrade-pkg pytest
