name: Build

on: [push, pull_request]

jobs:
  test:

    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python_version: ['{{ cookiecutter.target_python_version }}']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %}${{ matrix.python_version }}{% endraw %}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
          hatch env create
      - name: Lint and typecheck
        run: |
          hatch run lint
          hatch run typecheck
      - name: Run Tests
        run: |
          hatch run cov-cicd
      - uses: codecov/codecov-action@v5
        with:
          token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          fail_ci_if_error: true
          verbose: true

  release:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python {% raw %}${{ matrix.python_version }}{% endraw %}
        uses: actions/setup-python@v5
        with:
          python-version: '{{ cookiecutter.target_python_version }}'
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
      - name: Build
        run: |
          hatch build
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          HATCH_INDEX_USER: ___token___
          HATCH_INDEX_AUTH: {% raw %}${{ secrets.PYPI_API_TOKEN }}{% endraw %}
        run: |
          hatch publish
